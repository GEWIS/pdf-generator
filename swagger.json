{
	"openapi": "3.0.0",
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"ValidateErrorJSON": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Validation failed"
						],
						"nullable": false
					},
					"details": {
						"properties": {},
						"additionalProperties": {},
						"type": "object"
					}
				},
				"required": [
					"message",
					"details"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InternalError": {
				"properties": {
					"message": {
						"type": "string",
						"enum": [
							"Internal Server Error"
						],
						"nullable": false
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"VAT": {
				"enum": [
					"ZERO",
					"LOW",
					"HIGH"
				],
				"type": "string"
			},
			"ProductPricing": {
				"properties": {
					"basePrice": {
						"type": "number",
						"format": "double"
					},
					"discount": {
						"type": "number",
						"format": "double"
					},
					"vatAmount": {
						"type": "number",
						"format": "double"
					},
					"vatCategory": {
						"$ref": "#/components/schemas/VAT"
					},
					"quantity": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"basePrice",
					"vatAmount",
					"vatCategory",
					"quantity"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Product": {
				"properties": {
					"name": {
						"type": "string"
					},
					"details": {
						"type": "string"
					},
					"summary": {
						"type": "string"
					},
					"specification": {
						"type": "string"
					},
					"pricing": {
						"$ref": "#/components/schemas/ProductPricing"
					}
				},
				"required": [
					"name",
					"summary",
					"pricing"
				],
				"type": "object",
				"additionalProperties": false
			},
			"TotalPricing": {
				"properties": {
					"exclVat": {
						"type": "number",
						"format": "double"
					},
					"lowVat": {
						"type": "number",
						"format": "double"
					},
					"highVat": {
						"type": "number",
						"format": "double"
					},
					"inclVat": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"exclVat",
					"lowVat",
					"highVat",
					"inclVat"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FineReportParameters": {
				"properties": {
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					},
					"fines": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"total": {
						"$ref": "#/components/schemas/TotalPricing"
					}
				},
				"required": [
					"startDate",
					"endDate",
					"fines",
					"total"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Language": {
				"enum": [
					"DUTCH",
					"ENGLISH"
				],
				"type": "string"
			},
			"ReturnFileType": {
				"enum": [
					"PDF",
					"TEX"
				],
				"type": "string"
			},
			"FileSettings": {
				"properties": {
					"name": {
						"type": "string"
					},
					"language": {
						"$ref": "#/components/schemas/Language"
					},
					"fileType": {
						"$ref": "#/components/schemas/ReturnFileType"
					},
					"stationery": {
						"type": "string"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"name",
					"language",
					"fileType",
					"createdAt"
				],
				"type": "object",
				"additionalProperties": false
			},
			"FineRouteParams": {
				"properties": {
					"params": {
						"$ref": "#/components/schemas/FineReportParameters"
					},
					"settings": {
						"$ref": "#/components/schemas/FileSettings"
					}
				},
				"required": [
					"params",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Payout": {
				"properties": {
					"bankAccountName": {
						"type": "string"
					},
					"bankAccountNumber": {
						"type": "string"
					},
					"amount": {
						"type": "number",
						"format": "double"
					},
					"reference": {
						"type": "string"
					},
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"debtorNumber": {
						"type": "string"
					}
				},
				"required": [
					"bankAccountName",
					"bankAccountNumber",
					"amount",
					"reference",
					"date",
					"debtorNumber"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PayoutParameters": {
				"properties": {
					"payout": {
						"$ref": "#/components/schemas/Payout"
					}
				},
				"required": [
					"payout"
				],
				"type": "object",
				"additionalProperties": false
			},
			"PayoutRouteParams": {
				"properties": {
					"params": {
						"$ref": "#/components/schemas/PayoutParameters"
					},
					"settings": {
						"$ref": "#/components/schemas/FileSettings"
					}
				},
				"required": [
					"params",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ContractType": {
				"enum": [
					"contract",
					"quote"
				],
				"type": "string"
			},
			"Identity": {
				"properties": {
					"firstName": {
						"type": "string"
					},
					"lastNamePreposition": {
						"type": "string"
					},
					"lastName": {
						"type": "string"
					},
					"fullName": {
						"type": "string"
					},
					"function": {
						"type": "string"
					}
				},
				"required": [
					"firstName",
					"lastNamePreposition",
					"lastName",
					"fullName"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Dates": {
				"properties": {
					"date": {
						"type": "string",
						"format": "date-time"
					},
					"dueDate": {
						"type": "string",
						"format": "date-time"
					},
					"dueDays": {
						"type": "number",
						"format": "double"
					},
					"startDate": {
						"type": "string",
						"format": "date-time"
					},
					"endDate": {
						"type": "string",
						"format": "date-time"
					}
				},
				"required": [
					"date"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Company": {
				"properties": {
					"name": {
						"type": "string"
					},
					"id": {
						"type": "string"
					}
				},
				"required": [
					"name"
				],
				"type": "object",
				"additionalProperties": false
			},
			"Address": {
				"properties": {
					"street": {
						"type": "string"
					},
					"postalCode": {
						"type": "string"
					},
					"city": {
						"type": "string"
					},
					"country": {
						"type": "string"
					}
				},
				"required": [
					"street",
					"postalCode",
					"city",
					"country"
				],
				"type": "object",
				"additionalProperties": false
			},
			"References": {
				"properties": {
					"ourReference": {
						"type": "string"
					},
					"yourReference": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"ContractParameters": {
				"properties": {
					"subject": {
						"type": "string"
					},
					"sender": {
						"$ref": "#/components/schemas/Identity"
					},
					"recipient": {
						"$ref": "#/components/schemas/Identity"
					},
					"dates": {
						"$ref": "#/components/schemas/Dates"
					},
					"company": {
						"$ref": "#/components/schemas/Company"
					},
					"address": {
						"$ref": "#/components/schemas/Address"
					},
					"reference": {
						"$ref": "#/components/schemas/References"
					},
					"products": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"pricing": {
						"$ref": "#/components/schemas/TotalPricing"
					},
					"firstSignee": {
						"$ref": "#/components/schemas/Identity"
					},
					"secondSignee": {
						"$ref": "#/components/schemas/Identity"
					}
				},
				"required": [
					"subject",
					"sender",
					"recipient",
					"dates",
					"company",
					"address",
					"products",
					"pricing",
					"firstSignee",
					"secondSignee"
				],
				"type": "object",
				"additionalProperties": false
			},
			"ContractRouteParams": {
				"properties": {
					"params": {
						"$ref": "#/components/schemas/ContractParameters"
					},
					"settings": {
						"$ref": "#/components/schemas/FileSettings"
					}
				},
				"required": [
					"params",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InvoiceType": {
				"enum": [
					"invoice",
					"weeklysales",
					"creditnota"
				],
				"type": "string"
			},
			"InvoiceReferences": {
				"properties": {
					"ourReference": {
						"type": "string"
					},
					"yourReference": {
						"type": "string"
					},
					"costCenter": {
						"type": "boolean"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_QuoteParameters.Exclude_keyofQuoteParameters.reference__": {
				"properties": {
					"products": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"pricing": {
						"$ref": "#/components/schemas/TotalPricing"
					},
					"subject": {
						"type": "string"
					},
					"sender": {
						"$ref": "#/components/schemas/Identity"
					},
					"recipient": {
						"$ref": "#/components/schemas/Identity"
					},
					"dates": {
						"$ref": "#/components/schemas/Dates"
					},
					"company": {
						"$ref": "#/components/schemas/Company"
					},
					"address": {
						"$ref": "#/components/schemas/Address"
					}
				},
				"required": [
					"products",
					"pricing",
					"subject",
					"sender",
					"recipient",
					"dates",
					"company",
					"address"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"InvoiceParameters": {
				"properties": {
					"products": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"pricing": {
						"$ref": "#/components/schemas/TotalPricing"
					},
					"subject": {
						"type": "string"
					},
					"sender": {
						"$ref": "#/components/schemas/Identity"
					},
					"recipient": {
						"$ref": "#/components/schemas/Identity"
					},
					"dates": {
						"$ref": "#/components/schemas/Dates"
					},
					"company": {
						"$ref": "#/components/schemas/Company"
					},
					"address": {
						"$ref": "#/components/schemas/Address"
					},
					"summarizedProducts": {
						"items": {
							"$ref": "#/components/schemas/Product"
						},
						"type": "array"
					},
					"reference": {
						"$ref": "#/components/schemas/InvoiceReferences"
					}
				},
				"required": [
					"products",
					"pricing",
					"subject",
					"sender",
					"recipient",
					"dates",
					"company",
					"address"
				],
				"type": "object",
				"additionalProperties": false
			},
			"InvoiceRouteParams": {
				"properties": {
					"params": {
						"$ref": "#/components/schemas/InvoiceParameters"
					},
					"settings": {
						"$ref": "#/components/schemas/FileSettings"
					}
				},
				"required": [
					"params",
					"settings"
				],
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "pdf-generator-client",
		"version": "0.0.1",
		"description": "This repository contains the client for the PDF-generator.",
		"license": {
			"name": "AGPL-3.0-or-later"
		},
		"contact": {
			"name": "Gijs de Man"
		}
	},
	"paths": {
		"/report/fines": {
			"post": {
				"operationId": "GenerateInvoice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf+tex": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/InternalError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"description": "Generates an invoice as Tex of PDF file.\r\nSupply all invoice parameters and invoice type and receive the corresponding invoice",
				"tags": [
					"Report"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/FineRouteParams"
							}
						}
					}
				}
			}
		},
		"/payout": {
			"post": {
				"operationId": "GeneratePayout",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf+tex": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/InternalError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"description": "Generates a payout as Tex of PDF file.\r\nSupply all payout parameters and receive the corresponding payout",
				"tags": [
					"Payout"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/PayoutRouteParams"
							}
						}
					}
				}
			}
		},
		"/contract/{type}": {
			"post": {
				"operationId": "GenerateContract",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf+tex": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/InternalError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"description": "Generates a contract as Tex of PDF file.\r\nSupply all contract parameters and contract type and receive the corresponding contract",
				"tags": [
					"Contract"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "type",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/ContractType"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/ContractRouteParams"
							}
						}
					}
				}
			}
		},
		"/invoice/{type}": {
			"post": {
				"operationId": "GenerateInvoice",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/pdf+tex": {
								"schema": {}
							}
						}
					},
					"422": {
						"description": "Validation Failed",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/ValidateErrorJSON"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					},
					"500": {
						"description": "Internal Server Error",
						"content": {
							"application/pdf+tex": {
								"schema": {
									"$ref": "#/components/schemas/InternalError"
								},
								"examples": {
									"Example 1": {}
								}
							}
						}
					}
				},
				"description": "Generates an invoice as Tex of PDF file.\r\nSupply all invoice parameters and invoice type and receive the corresponding invoice",
				"tags": [
					"Invoice"
				],
				"security": [],
				"parameters": [
					{
						"in": "path",
						"name": "type",
						"required": true,
						"schema": {
							"$ref": "#/components/schemas/InvoiceType"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/InvoiceRouteParams"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/pdf"
		}
	]
}